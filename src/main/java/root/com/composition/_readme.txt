Java复合优先于继承

继承机制会把父类API中的所有缺陷传播到子类中，而复合允许设计新的API来隐藏这些缺陷。
复合(composition):不扩展现有的类，而是在新的类中增加一个私有域，引用现有类的一个实例。
转发(forwarding):新类中的每个实例方法都可以调用被包含的现有类实例中对应的方法，并返回结果。

如何从继承和复合之间做出选择?
比较抽象的说法是，只有子类和父类确实存在"is-a"关系的时候使用继承，否则使用复合。
或者比较实际点的说法是，如果子类只需要实现超类的部分行为，则考虑使用复合。

用到了装饰者模式：
装饰者模式挺像一种组合、而且是可以任意搭配、制定的。当我们有新的需求的时候、添加一个装饰器就ok
必要的时候可以添加组件、这样就实现了不用修改现有代码就可以扩展和修改新的功能的一个目的
open for extension, close for modification.扩展打开,修改关闭.开闭原则
